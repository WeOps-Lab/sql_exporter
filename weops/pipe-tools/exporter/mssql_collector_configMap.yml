apiVersion: v1
kind: ConfigMap
metadata:
  name: mssql-collector
  namespace: mssql
data:
  sql_config_2022.yaml: |-
    # Global defaults.
    global:
      # Default to 10 seconds, since Prometheus has a 10 second scrape timeout default.
      scrape_timeout: 5s
      # Subtracted from Prometheus' scrape_timeout to give us some headroom and prevent Prometheus from timing out first.
      scrape_timeout_offset: 500ms
      # Minimum interval between collector runs: by default (0s) collectors are executed on every scrape.
      min_interval: 0s
      # Maximum number of open connections to any one target. Metric queries will run concurrently on multiple connections,
      # as will concurrent scrapes.
      max_connections: 3
      # Maximum number of idle connections to any one target. Unless you use very long collection intervals, this should
      # always be the same as max_connections.
      max_idle_connections: 3
      # Maximum number of maximum amount of time a connection may be reused. Expired connections may be closed lazily before reuse.
      # If 0, connections are not closed due to a connection's age.
      max_connection_lifetime: 5m

    # The target to monitor and the collectors to execute on it.
    target:
      # Data source name always has a URI schema that matches the driver name. In some cases (e.g. MySQL)
      # the schema gets dropped or replaced to match the driver expected DSN format.
      data_source_name: 'sqlserver://SA:Weops123!@mssqlserver-2022.mssql:1433'
      collectors: [mssql_*]

    # Collector files specifies a list of globs. One collector definition is read from each matching file.
    # Glob patterns are supported (see <https://pkg.go.dev/path/filepath#Match> for syntax).
    collector_files:
      - "/collector/*.collector.yaml"

  sql_config_2019.yaml: |-
    # Global defaults.
    global:
      # Default to 10 seconds, since Prometheus has a 10 second scrape timeout default.
      scrape_timeout: 5s
      # Subtracted from Prometheus' scrape_timeout to give us some headroom and prevent Prometheus from timing out first.
      scrape_timeout_offset: 500ms
      # Minimum interval between collector runs: by default (0s) collectors are executed on every scrape.
      min_interval: 0s
      # Maximum number of open connections to any one target. Metric queries will run concurrently on multiple connections,
      # as will concurrent scrapes.
      max_connections: 3
      # Maximum number of idle connections to any one target. Unless you use very long collection intervals, this should
      # always be the same as max_connections.
      max_idle_connections: 3
      # Maximum number of maximum amount of time a connection may be reused. Expired connections may be closed lazily before reuse.
      # If 0, connections are not closed due to a connection's age.
      max_connection_lifetime: 5m

    # The target to monitor and the collectors to execute on it.
    target:
      # Data source name always has a URI schema that matches the driver name. In some cases (e.g. MySQL)
      # the schema gets dropped or replaced to match the driver expected DSN format.
      data_source_name: 'sqlserver://SA:Weops123!@mssqlserver-2019.mssql:1433'
      collectors: [mssql_*]

    # Collector files specifies a list of globs. One collector definition is read from each matching file.
    # Glob patterns are supported (see <https://pkg.go.dev/path/filepath#Match> for syntax).
    collector_files:
      - "/collector/*.collector.yaml"

  sql_config_2017.yaml: |-
    # Global defaults.
    global:
      # Default to 10 seconds, since Prometheus has a 10 second scrape timeout default.
      scrape_timeout: 5s
      # Subtracted from Prometheus' scrape_timeout to give us some headroom and prevent Prometheus from timing out first.
      scrape_timeout_offset: 500ms
      # Minimum interval between collector runs: by default (0s) collectors are executed on every scrape.
      min_interval: 0s
      # Maximum number of open connections to any one target. Metric queries will run concurrently on multiple connections,
      # as will concurrent scrapes.
      max_connections: 3
      # Maximum number of idle connections to any one target. Unless you use very long collection intervals, this should
      # always be the same as max_connections.
      max_idle_connections: 3
      # Maximum number of maximum amount of time a connection may be reused. Expired connections may be closed lazily before reuse.
      # If 0, connections are not closed due to a connection's age.
      max_connection_lifetime: 5m

    # The target to monitor and the collectors to execute on it.
    target:
      # Data source name always has a URI schema that matches the driver name. In some cases (e.g. MySQL)
      # the schema gets dropped or replaced to match the driver expected DSN format.
      data_source_name: 'sqlserver://SA:Weops123!@mssql-2017-mssql-linux.mssql:1433'
      collectors: [mssql_*]

    # Collector files specifies a list of globs. One collector definition is read from each matching file.
    # Glob patterns are supported (see <https://pkg.go.dev/path/filepath#Match> for syntax).
    collector_files:
      - "/collector/*.collector.yaml"

  mssql.collector.yaml: |-
    {{sqlCollector}}